Logical Explanation of The Program "Stack" - Canaon

This Java program implements a simple numbered stack using a Stack data structure from the java.util package. 
The program allows the user to perform basic stack operations such as push, pop, display, and search.

1. Class Definition:
- The NumberedStack class has a private member variable stack, which is an instance of the Stack<Integer> class.
- The class provides methods for push, pop, display, and search operations on the stack.
- The main method is the entry point of the program.

2. Constructor:
- The NumberedStack constructor initializes an empty stack using Stack<Integer>.

3. Push Method:
- The push method adds a given number to the top of the stack and prints a message indicating that the number has been pushed.

4. Pop Method:
- The pop method removes the top element from the stack if the stack is not empty and prints a message indicating the popped number. 
- If the stack is empty, it prints an appropriate message.

5. Display Method:
- The display method prints the contents of the stack. If the stack is empty, it prints a message indicating that the stack is empty.

6. Search Method:
- The search method takes a number as input and searches for its position in the stack using the search method of the Stack class. 
- It prints whether the number is found and its position from the top of the stack.

7. Main Method:
- In the main method, an instance of NumberedStack is created, and a Scanner object is used to take user input.
- A menu-driven loop allows the user to choose options for push, pop, display, search, and exit.
- The program continues to run until the user chooses to exit (5).
- The user's choice is processed using a switch statement, and the corresponding method is called.

8. Menu Options:
- The user is presented with a menu to choose from options (1 for push, 2 for pop, 3 for display, 4 for search, and 5 for exit).
- Depending on the user's choice, the program performs the corresponding operation.

The program ensures that the user can interact with the numbered stack through a simple console interface, making it easy to understand and use. 
The loop continues until the user chooses to exit, providing a persistent menu for the user to perform stack operations.